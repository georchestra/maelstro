sources:
  geonetwork_instances:
    # une seule instance geonetwork source supportée dans la v1
    # ce nom sera utilisé dans une V2 (non financée) pour que l'utilisateur final choisisse l'instance GN source 
    - name: "GeonetworkDemo"
      # api_url: https://mastergn.rennesmetropole.fr/geonetwork/srv/api
      api_url: "https://demo.georchestra.org/geonetwork/srv/api"
      login: "${DEMO_LOGIN}"
      password: "${DEMO_LOGIN}"
      transformations:
        - public_to_prod
    - name: "GeonetworkDemoAnonymous"
      api_url: "https://demo.georchestra.org/geonetwork/srv/api"
      transformations:
        - public_to_prod
        - prod_to_final_prod
    - name: "GeonetworkRennes"
      api_url: "https://public.sig.rennesmetropole.fr/geonetwork/srv/api"
      login: "${XXX}"
      password: "${XXX}"
  geoserver_instances: 
    - url: "https://demo.georchestra.org/geoserver"
      login: "${DEMO_LOGIN}"
      password: "${DEMO_LOGIN}"
  
  
destinations:
  # nom de l'instance geOrchestra destination, telle qu'il apparaitra dans la UI
  "CompoLocale":
    login: "${LOCAL_LOGIN}"
    password: "${LOCAL_LOGIN}"
    geonetwork:
      api_url: "http://proxy:8080/geonetwork/srv/api"
    geoserver:
      url: "http://proxy:8080/geoserver"
    transformations:
      - prod_to_final_prod
  "CompoLocaleMaelstro":
    login: "tmaelstro"
    password: "tmaelstro"
    geonetwork:
      api_url: "http://proxy:8080/geonetwork/srv/api"
    geoserver:
      url: "http://proxy:8080/geoserver"


transformations:
  public_to_prod:
    xsl_path: ./tests/test_public_to_prod.xsl
    description: "Transformation from public geoserver to prod server & remove blogs"
  prod_to_final_prod:
    xsl_path: ./tests/test_prod_to_final_prod.xsl
    description: "Transformation from prod server to final prod"


db_logging:
  host: "database"
  port: "5432"
  login: "georchestra"
  password: "georchestra"
